@model SaralDemo.Models.Employee

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

    <div class="form-horizontal">
        <h4>Employee</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeID)

        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOB, @"{0:yyyy\/MM\/dd}", new { @class = "datepicker" })
                @*@Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodGroup, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOJ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOJ, @"{0:yyyy\/MM\/dd}", new { @class = "datepicker" })
                @*@Html.EditorFor(model => model.DOJ, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaritalStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="color:black; ">
                @Html.DropDownListFor(m => m.MaritalStatus, new List<SelectListItem>
                { new SelectListItem{Text="Married", Value="Married"},
                  new SelectListItem{Text="Single", Value="Unmarried"}
                      }, "Please select", htmlAttributes: new { @class = "form-control" })

            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="color:black; ">
                @Html.DropDownListFor(m => m.Designation, new List<SelectListItem>
                { new SelectListItem{Text="Trainee", Value="Trainee"},
                  new SelectListItem{Text="Jr.SoftwareDeveloper", Value="Jr.SoftwareDeveloper"},
                    new SelectListItem{Text="SoftwareDeveloper", Value="SoftwareDeveloper"},
                      new SelectListItem{Text="SeniorSoftwareEngineer", Value="SeniorSoftwareEngineer"},
                        new SelectListItem{Text="ProjectManager", Value="ProjectManager"},
                         new SelectListItem{Text="IT Head", Value="IT Head"},
                         new SelectListItem{Text="QualityAnalyst", Value="QualityAnalyst"}
                      }, "Please select", htmlAttributes: new { @class = "form-control" })

            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" onclick="
                       ();" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
    <script type="text/javascript">

        $(document).ready(function () {

            var maxBirthdayDate = new Date();
            maxBirthdayDate.setFullYear(maxBirthdayDate.getFullYear() - 20, 11, 31);
            $("#DOB").datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                maxDate: maxBirthdayDate,
                yearRange: '1950:' + maxBirthdayDate.getFullYear(),
            });

            $("#DOJ").datepicker({
                dateFormat: "yy-mm-dd",
                minDate: "-1M -1D",
                maxDate: "+1M +1D"

            });

        });
    </script>
}
