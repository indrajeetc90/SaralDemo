@model SaralDemo.ViewModel.EmpAddViewModel
@{
    ViewBag.Title = "Addemp";
}

@Styles.Render("~/Content/themes/base/css")
@using (Html.BeginForm())

{

    @Html.AntiForgeryToken()

    <div class="form-horizontal row">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <br />

        <h2 style="margin-left: 475px; margin-top: 0;">Basic Details</h2>
        <br />
        <div class="col-md-5" style="margin-left: 89px">
            <div class="form-group">
                @Html.LabelFor(model => model.Emp.FullName, " Full Name", htmlAttributes: new { style = "width: 97px;", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.FullName, new { htmlAttributes = new { style = "width: 235px;  margin-left: 98px; margin-top: -26px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.FullName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.Email, htmlAttributes: new { style = " margin-left: -18px;", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.Email, new { htmlAttributes = new { style = "width: 235px; margin-left: 31px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.Password, new { htmlAttributes = new { style = "width: 235px; margin-left: 12px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.Gender, htmlAttributes: new { style = " margin-left: -5px;", @class = "control-label col-md-2" })

                <div class="col-md-10" style="color:black; ">
                    @Html.DropDownListFor(model => model.Emp.Gender, new List<SelectListItem>
                    { new SelectListItem{Text="Male", Value="Male"},
                      new SelectListItem{Text="Female", Value="Female"},
                      new SelectListItem{Text="Others", Value="Others"}
                          }, "Please select", htmlAttributes: new { style = "width: 235px; margin-left: 19px;", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Emp.Gender, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.Contact, new { htmlAttributes = new { style = "width: 235px;margin-left: 12px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.Contact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.DOB, htmlAttributes: new { style = " margin-left: -21px;", @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.EditorFor(model => model.Emp.DOB, new { htmlAttributes = new { id = "DOB", style = "width: 235px; margin-left: 36px; ", @class = "form-control", placeholder = "YYYY-MM-DD" } })
                    @Html.ValidationMessageFor(model => model.Emp.DOB, "", new { @class = "text-danger" })

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Emp.BloodGroup, "Blood Group", htmlAttributes: new { style = "width: 116px;", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.BloodGroup, new { htmlAttributes = new { style = "width: 235px;  margin-left: 101px; margin-top: -26px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.BloodGroup, "", new { @class = "text-danger" })
                    <br>
                    <br>
                    <br>

                </div>
            </div>

        </div>


        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.Emp.DOJ, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.DOJ, new { htmlAttributes = new { id = "DOJ", style = "width: 235px; margin-left: 46px;", @class = "form-control", placeholder = "YYYY-MM-DD" } })

                    @Html.ValidationMessageFor(model => model.Emp.DOJ, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.MaritalStatus, "Marital Status", htmlAttributes: new { style = "width: 122px;", @class = "control-label col-md-2" })
                <div class="col-md-10" style="color:black; ">
                    @Html.DropDownListFor(model => model.Emp.MaritalStatus, new List<SelectListItem>
                    { new SelectListItem{Text="Married", Value="Married"},
                      new SelectListItem{Text="Single", Value="Single"}
                          }, "Please select", htmlAttributes: new { style = "width: 235px;  margin-left: 130px; margin-top: -26px;", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Emp.MaritalStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.FatherName, "Father Name", htmlAttributes: new { style = "width: 122px;", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.FatherName, new { htmlAttributes = new { style = "width: 235px;  margin-left: 130px; margin-top: -26px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.FatherName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.MotherName, "Mother Name", htmlAttributes: new { style = "width: 122px;", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.MotherName, new { htmlAttributes = new { style = "width: 235px;  margin-left: 132px; margin-top: -26px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.MotherName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.CurrentAddress, "Current Address", htmlAttributes: new { style = "width: 140px;", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.CurrentAddress, new { htmlAttributes = new { style = "width: 235px;  margin-left: 134px; margin-top: -26px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.CurrentAddress, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Emp.PermanentAddress, htmlAttributes: new { tyle = "width: 162px;", @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Emp.PermanentAddress, new { htmlAttributes = new { style = "width: 235px;  margin-left: 49px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Emp.PermanentAddress, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Emp.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10" style="color:black; ">
                    @Html.DropDownListFor(model => model.Emp.Designation, new List<SelectListItem>
                    { new SelectListItem{Text="Trainee", Value="Trainee"},
                      new SelectListItem{Text="Jr.SoftwareDeveloper", Value="Jr.SoftwareDeveloper"},
                        new SelectListItem{Text="SoftwareDeveloper", Value="SoftwareDeveloper"},
                          new SelectListItem{Text="SeniorSoftwareEngineer", Value="SeniorSoftwareEngineer"},
                            new SelectListItem{Text="ProjectManager", Value="ProjectManager"},
                             new SelectListItem{Text="IT Head", Value="IT Head"},
                             new SelectListItem{Text="QualityAnalyst", Value="QualityAnalyst"}
                          }, "Please select", htmlAttributes: new { style = "width: 235px; margin-left:48px", @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Emp.Designation, "", new { @class = "text-danger" })
                    <br>
                    <br>
                    <br>


                </div>
                <h1 style="margin-left: -148px">Bank Details</h1>
                <br />
            </div>
        </div>




        <div class="col-md-5" style="margin-left: 89px">
            <div class="form-group">
                @Html.LabelFor(model => model.bank.AadharCard,"Aadhar Card", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bank.AadharCard, new { htmlAttributes = new { style = "width: 235px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bank.AadharCard, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bank.PanCard, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bank.PanCard, new { htmlAttributes = new { style = "width: 235px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bank.PanCard, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bank.PfAccNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bank.PfAccNo, new { htmlAttributes = new { style = "width: 235px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bank.PfAccNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bank.BankName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bank.BankName, new { htmlAttributes = new { style = "width: 235px;", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bank.BankName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="col-md-5">
            <div class="form-group">
                @Html.LabelFor(model => model.bank.BranchName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bank.BranchName, new { htmlAttributes = new { style = "margin-left: 19px; width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bank.BranchName, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bank.IfscCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bank.IfscCode, new { htmlAttributes = new { style = "margin-left: 19px; width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bank.IfscCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.bank.BankAccNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.bank.BankAccNo, new { htmlAttributes = new { style = "margin-left: 19px; width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.bank.BankAccNo, "", new { @class = "text-danger" })
                    <br />
                    <br />
                    <br />
                    <br />
                </div>
                <h2 style="margin-left: -144px">Technical Details</h2>
                <br />
            </div>
        </div>


        <div class="col-md-5" style="margin-left: 89px">
            <div class="form-group">
                @Html.LabelFor(model => model.tech.TotalYearsOfExperience, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tech.TotalYearsOfExperience, new { htmlAttributes = new { style = "margin-left: 97px; width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tech.TotalYearsOfExperience, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tech.KnownTechnologiies, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tech.KnownTechnologiies, new { htmlAttributes = new { style = "margin-left: 96px; width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tech.KnownTechnologiies, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tech.Education, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tech.Education, new { htmlAttributes = new { style = "margin-left: 95px; width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tech.Education, "", new { @class = "text-danger" })
                    <br />
                    <br />
                </div>
            </div>
        </div>

        <div class="col-md-5">


            <div class="form-group">
                @Html.LabelFor(model => model.tech.PreviousCTC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tech.PreviousCTC, new { htmlAttributes = new { style = "margin-left: 43px; width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tech.PreviousCTC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.tech.CureentCTC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.tech.CureentCTC, new { htmlAttributes = new { style = "margin-left: 43px;width: 235px; ", @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.tech.CureentCTC, "", new { @class = "text-danger" })
                    <br />
                    <br />
                    <br />
                    <br />
                    <br />

                </div>
            </div>

        </div>
        <br />


    </div>
    <div>
        <input type="submit" style="margin-left: 373px; width: 93px; " name="actionType" class="btn btn-success" value="Save" />
        <input type="submit" style="margin-left: 12px; width: 112px; " name="actionType" class="btn btn-primary" value="Save and View" />
        <input type="button" style="margin-left:12px;" value="Cancel" class="btn btn-warning" onclick="@("window.location.href='" + @Url.Action("Index", "Employees") + "'");" />
    </div>
        <br />
    <br />
    <!--<div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" style="margin-left: -12px; width: 113px;" value="Save" class="btn btn-success" />
            <input type="submit" style="margin-left: -12px; width: 113px;" value="Save And View" class="btn btn-primary" />
            <input type="button" value="Cancel" class="btn btn-warning" onclick="@("window.location.href='" + @Url.Action("Index", "Employees") + "'");" />-->
    @*<input type="reset" style="margin-left: 209px; width: 113px;" value="Cancel" class="btn btn-warning" id="btnClear" />*@
    <!--</div>

    </div>-->

}

@section Scripts
    {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryui")

    <script type="text/javascript">
        $(document).ready(function () {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                 "onclick": null,
                "showDuration": "1000",
                "hideDuration": "1000",
                "timeOut": "2000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            if ('@TempData["Message"]' == "Added")
            {
                toastr.success('Employee Added Successfully');
            }
            else if ('@TempData["Message"]' == "Failed")
            {
                toastr.error("Some Changes Required")
            }
        });


    </script>

    <script type="text/javascript">

        $(document).ready(function () {

            var maxBirthdayDate = new Date();
            maxBirthdayDate.setFullYear(maxBirthdayDate.getFullYear() - 20, 11, 31);
            $("#DOB").datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                maxDate: maxBirthdayDate,
                yearRange: '1950:' + maxBirthdayDate.getFullYear(),
            });

            $("#DOJ").datepicker({
                dateFormat: "yy-mm-dd",
                minDate: "-1M -1D",
                maxDate: "+1M +1D"

            });

        });
    </script>

}

