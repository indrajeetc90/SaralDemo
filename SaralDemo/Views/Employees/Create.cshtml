@model SaralDemo.Models.Employee

@{
    ViewBag.Title = "Add Employee";
}

<h2>Add Employee's</h2>
@Html.Raw(TempData["msg"])

@using (Html.BeginForm())

{


    @Html.AntiForgeryToken()
    @Styles.Render("~/Content/themes/base/css")


<div class="form-horizontal" style="border:solid 1px; width:auto;">

    <br />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
<div class="col-md-5">
    <div class="form-group">
        @Html.LabelFor(model => model.FullName, " Full Name", htmlAttributes: new { style = "width: 97px;", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { style = "width: 249px;  margin-left: 77px; margin-top: -26px;", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { style = "width: 249px;", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { style = "width: 249px;", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })

        <div class="col-md-10" style="color:black; ">
            @Html.DropDownListFor(m => m.Gender, new List<SelectListItem>
            { new SelectListItem{Text="Male", Value="Male"},
              new SelectListItem{Text="Female", Value="Female"},
              new SelectListItem{Text="Others", Value="Others"}
                  }, "Please select", htmlAttributes: new { style = "width: 249px;", @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { style = "width: 249px;", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">

            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { style = "width: 235px; margin-left: 12px; ", @class = "form-control" , placeholder = "YYYY-MM-DD" } })
             @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })

        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.BloodGroup, "Blood Group", htmlAttributes: new { style = "width: 116px;", @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.BloodGroup, new { htmlAttributes = new { style = "width: 235px;  margin-left: 95px; margin-top: -26px;", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.BloodGroup, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.DOJ, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DOJ, new { htmlAttributes = new { style = "width: 235px; margin-left: 15px;", @class = "form-control", placeholder = "YYYY-MM-DD" } })

            @Html.ValidationMessageFor(model => model.DOJ, "", new { @class = "text-danger" })
        </div>
    </div>


</div>

    <div class="col-md-5">





        <div class="form-group">
            @Html.LabelFor(model => model.MaritalStatus, "Marital Status", htmlAttributes: new { style = "width: 122px;", @class = "control-label col-md-2" })
            <div class="col-md-10" style="color:black; ">
                @Html.DropDownListFor(m => m.MaritalStatus, new List<SelectListItem>
                { new SelectListItem{Text="Married", Value="Married"},
                  new SelectListItem{Text="Unmarried", Value="Unmarried"}
                      }, "Please select", htmlAttributes: new { style = "width: 225px;  margin-left: 130px; margin-top: -26px;", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaritalStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FatherName, "Father Name", htmlAttributes: new { style = "width: 122px;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FatherName, new { htmlAttributes = new { style = "width: 225px;  margin-left: 130px; margin-top: -26px;", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FatherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MotherName, "Mother Name", htmlAttributes: new { style = "width: 122px;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MotherName, new { htmlAttributes = new { style = "width: 225px;  margin-left: 132px; margin-top: -26px;", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MotherName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentAddress, "Current Address", htmlAttributes: new { style = "width: 140px;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CurrentAddress, new { htmlAttributes = new { style = "width: 225px;  margin-left: 134px; margin-top: -26px;", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PermanentAddress, htmlAttributes: new { style = "width: 162px;", @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PermanentAddress, new { htmlAttributes = new { style = "width: 225px;  margin-left: 140px; margin-top: -26px;", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PermanentAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10" style="color:black; ">
                @Html.DropDownListFor(m => m.Designation, new List<SelectListItem>
                { new SelectListItem{Text="Trainee", Value="Trainee"},
                  new SelectListItem{Text="Jr.SoftwareDeveloper", Value="Jr.SoftwareDeveloper"},
                    new SelectListItem{Text="SoftwareDeveloper", Value="SoftwareDeveloper"},
                      new SelectListItem{Text="SeniorSoftwareEngineer", Value="SeniorSoftwareEngineer"},
                        new SelectListItem{Text="ProjectManager", Value="ProjectManager"},
                         new SelectListItem{Text="IT Head", Value="IT Head"},
                         new SelectListItem{Text="QualityAnalyst", Value="QualityAnalyst"}
                      }, "Please select", htmlAttributes: new { style = "width: 225px; margin-left:57px", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>

        </div>

    </div>
 


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" style="margin-left: -12px; width: 113px;" value="Save" class="btn btn-success" />
            @*<input type="submit" style="margin-left: 209px; width: 113px;" value="Save And View" name="Save"class="btn btn-primary" />*@
            <input type="reset" style="margin-left: 209px; width: 113px;" value="Clear" class="btn btn-warning" id="btnClear" />
        </div>


    </div>
</div>

}







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    @Scripts.Render("~/bundles/jqueryui")

    <script type="text/javascript">
        $(document).ready(function () {
            toastr.options = {
                "closeButton": true,
                "debug": false,
                 "onclick": null,
                "showDuration": "1000",
                "hideDuration": "1000",
                "timeOut": "2000",
                "extendedTimeOut": "1000",
                "showEasing": "swing",
                "hideEasing": "linear",
                "showMethod": "fadeIn",
                "hideMethod": "fadeOut"
            };
            if ('@TempData["Message"]' == "Added")
            {
                toastr.success('Employee Added Successfully');
            }
            else if ('@TempData["Message"]' == "Failed")
            {
                toastr.error("Some Changes Required")
            }
        });


    </script>

    <script type="text/javascript">

        $(document).ready(function () {

            var maxBirthdayDate = new Date();
            maxBirthdayDate.setFullYear(maxBirthdayDate.getFullYear() - 20, 11, 31);
            $("#DOB").datepicker({
                dateFormat: "yy-mm-dd",
                changeMonth: true,
                changeYear: true,
                maxDate: maxBirthdayDate,
                yearRange: '1950:' + maxBirthdayDate.getFullYear(),
            });

            $("#DOJ").datepicker({
                dateFormat: "yy-mm-dd",
                minDate: "-1M -1D",
                maxDate: "+1M +1D"

            });
           
        });
    </script>



    


}

